const{defineComponent:t,h:o,ref:e,onBeforeMount:a,onMounted:n}=globalThis.Vue;function s(t){return l(t,t.childNodes)}function l(t,o){try{const e=document.createDocumentFragment();for(const t of o)e.appendChild(t);const a=t.shadowRoot;if(null!=a)return void console.error("[shadow] Attach shadow multiple times",t,o,a);{const o=t.attachShadow({mode:"open"});return o.appendChild(e),o}}catch(e){console.error("[shadow] make shadow-root failed",t,o),console.error(e)}}const r=t({props:{abstract:{type:Boolean,default:!1},static:{type:Boolean,default:!1},tag:{type:String,default:"div"},slotTag:{type:String,default:"div"},slotClass:{type:String},slotId:{type:String}},setup(t,{slots:r}){const d=e(!1),u=e(!1),c=e();return a((()=>{d.value=t.abstract,u.value=t.static})),n((()=>{d.value?l(c.value.parentElement,c.value.childNodes):s(c.value)})),()=>o(t.tag,{ref:c},[u.value?r.default():o(t.slotTag,{id:t.slotId,class:t.slotClass},[r.default()])])},install:d});function d(t){t.component("shadow-root",r),t.directive("shadow",{beforeMount(t){s(t)}})}var u={ShadowRoot:r,shadow_root:r,install:d};export default u;export{r as ShadowRoot,d as install,s as makeShadow,l as makeShadowRaw,r as shadow_root};
//# sourceMappingURL=shadow.esm-browser.prod.mjs.map
